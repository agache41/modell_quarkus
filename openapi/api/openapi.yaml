---
openapi: 3.0.3
info:
  title: quarkus API
  version: 1.0.0-SNAPSHOT
servers:
- url: http://localhost:8080
  description: Auto generated value
- url: http://0.0.0.0:8080
  description: Auto generated value
paths:
  /modell:
    put:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Modell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modell'
    post:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Modell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modell'
  /modell/all/asList:
    get:
      tags:
      - Modell Resource Service
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/autocomplete/{stringField}/like/{value}/asSortedSet:
    get:
      tags:
      - Modell Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /modell/byIds:
    delete:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                format: int64
                type: integer
      responses:
        "204":
          description: No Content
  /modell/byIds/asList:
    post:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                format: int64
                type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/byIds/{ids}:
    delete:
      tags:
      - Modell Resource Service
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: array
          items:
            format: int64
            type: integer
      responses:
        "204":
          description: No Content
  /modell/byIds/{ids}/asList:
    get:
      tags:
      - Modell Resource Service
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: array
          items:
            format: int64
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/filter/content/equals/value/asList:
    post:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Modell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/filter/content/in/values/asList:
    post:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Modell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/filter/{stringField}/equals/{value}/asList:
    get:
      tags:
      - Modell Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/filter/{stringField}/in/{values}/asList:
    get:
      tags:
      - Modell Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: values
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/filter/{stringField}/like/{value}/asList:
    get:
      tags:
      - Modell Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/list/asList:
    put:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Modell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
    post:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Modell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/{id}:
    get:
      tags:
      - Modell Resource Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modell'
    delete:
      tags:
      - Modell Resource Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: No Content
components:
  schemas:
    Modell:
      required:
      - id
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        street:
          type: string
        "no":
          format: int32
          type: integer
  securitySchemes:
    SecurityScheme:
      type: http
      description: Authentication
      scheme: basic
