---
openapi: 3.0.3
info:
  title: quarkus API
  version: 1.0.0-SNAPSHOT
servers:
- url: http://localhost:8080
  description: Auto generated value
- url: http://0.0.0.0:8080
  description: Auto generated value
paths:
  /embeddedIdModell:
    put:
      tags:
      - Embedded Id Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddedIdModell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddedIdModell'
    post:
      tags:
      - Embedded Id Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddedIdModell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddedIdModell'
  /embeddedIdModell/all/asList:
    get:
      tags:
      - Embedded Id Modell Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedIdModell'
  /embeddedIdModell/autocomplete/{stringField}/like/{value}/asSortedSet:
    get:
      tags:
      - Embedded Id Modell Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: cut
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /embeddedIdModell/autocompleteIds/{stringField}/like/{value}/asList:
    get:
      tags:
      - Embedded Id Modell Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: cut
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      $ref: '#/components/schemas/EmbeddedKeys'
                    value:
                      type: string
                    count:
                      format: int64
                      type: integer
  /embeddedIdModell/byId:
    post:
      tags:
      - Embedded Id Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddedKeys'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddedIdModell'
  /embeddedIdModell/byIds:
    delete:
      tags:
      - Embedded Id Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmbeddedKeys'
      responses:
        "204":
          description: No Content
  /embeddedIdModell/byIds/asList:
    post:
      tags:
      - Embedded Id Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmbeddedKeys'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedIdModell'
  /embeddedIdModell/byIds/{ids}:
    delete:
      tags:
      - Embedded Id Modell Resource Service
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedKeys'
      responses:
        "204":
          description: No Content
    parameters:
    - name: ids
      in: path
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/EmbeddedKeys'
  /embeddedIdModell/byIds/{ids}/asList:
    get:
      tags:
      - Embedded Id Modell Resource Service
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedKeys'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedIdModell'
    parameters:
    - name: ids
      in: path
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/EmbeddedKeys'
  /embeddedIdModell/filter/content/equals/value/asList:
    post:
      tags:
      - Embedded Id Modell Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddedIdModell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedIdModell'
  /embeddedIdModell/filter/content/in/values/asList:
    post:
      tags:
      - Embedded Id Modell Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmbeddedIdModell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedIdModell'
  /embeddedIdModell/filter/{stringField}/equals/{value}/asList:
    get:
      tags:
      - Embedded Id Modell Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedIdModell'
  /embeddedIdModell/filter/{stringField}/in/{values}/asList:
    get:
      tags:
      - Embedded Id Modell Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: values
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedIdModell'
  /embeddedIdModell/filter/{stringField}/like/{value}/asList:
    get:
      tags:
      - Embedded Id Modell Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedIdModell'
  /embeddedIdModell/list/asList:
    put:
      tags:
      - Embedded Id Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmbeddedIdModell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedIdModell'
    post:
      tags:
      - Embedded Id Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmbeddedIdModell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedIdModell'
  /embeddedIdModell/{id}:
    get:
      tags:
      - Embedded Id Modell Resource Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmbeddedKeys'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddedIdModell'
    delete:
      tags:
      - Embedded Id Modell Resource Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmbeddedKeys'
      responses:
        "204":
          description: No Content
    parameters:
    - name: id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/EmbeddedKeys'
  /modell:
    put:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Modell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modell'
    post:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Modell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modell'
  /modell/all/asList:
    get:
      tags:
      - Modell Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/autocomplete/{stringField}/like/{value}/asSortedSet:
    get:
      tags:
      - Modell Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: cut
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /modell/autocompleteIds/{stringField}/like/{value}/asList:
    get:
      tags:
      - Modell Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: cut
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      format: int64
                      type: integer
                    value:
                      type: string
                    count:
                      format: int64
                      type: integer
  /modell/byId:
    post:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              format: int64
              type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modell'
  /modell/byIds:
    delete:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                format: int64
                type: integer
      responses:
        "204":
          description: No Content
  /modell/byIds/asList:
    post:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                format: int64
                type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/byIds/{ids}:
    delete:
      tags:
      - Modell Resource Service
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: array
          items:
            format: int64
            type: integer
      responses:
        "204":
          description: No Content
    parameters:
    - name: ids
      in: path
      required: true
      schema:
        type: array
        items:
          format: int64
          type: integer
  /modell/byIds/{ids}/asList:
    get:
      tags:
      - Modell Resource Service
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: array
          items:
            format: int64
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
    parameters:
    - name: ids
      in: path
      required: true
      schema:
        type: array
        items:
          format: int64
          type: integer
  /modell/filter/content/equals/value/asList:
    post:
      tags:
      - Modell Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Modell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/filter/content/in/values/asList:
    post:
      tags:
      - Modell Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Modell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/filter/{stringField}/equals/{value}/asList:
    get:
      tags:
      - Modell Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/filter/{stringField}/in/{values}/asList:
    get:
      tags:
      - Modell Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: values
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/filter/{stringField}/like/{value}/asList:
    get:
      tags:
      - Modell Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/list/asList:
    put:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Modell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
    post:
      tags:
      - Modell Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Modell'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/over/100:
    get:
      tags:
      - Modell Resource Service
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modell'
  /modell/{id}:
    get:
      tags:
      - Modell Resource Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Modell'
    delete:
      tags:
      - Modell Resource Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: No Content
    parameters:
    - name: id
      in: path
      required: true
      schema:
        format: int64
        type: integer
  /modellFks:
    put:
      tags:
      - Modell Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModellFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModellFks'
    post:
      tags:
      - Modell Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModellFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModellFks'
  /modellFks/all/asList:
    get:
      tags:
      - Modell Fks Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModellFks'
  /modellFks/autocomplete/{stringField}/like/{value}/asSortedSet:
    get:
      tags:
      - Modell Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: cut
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /modellFks/autocompleteIds/{stringField}/like/{value}/asList:
    get:
      tags:
      - Modell Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: cut
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      format: int64
                      type: integer
                    value:
                      type: string
                    count:
                      format: int64
                      type: integer
  /modellFks/byId:
    post:
      tags:
      - Modell Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              format: int64
              type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModellFks'
  /modellFks/byIds:
    delete:
      tags:
      - Modell Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                format: int64
                type: integer
      responses:
        "204":
          description: No Content
  /modellFks/byIds/asList:
    post:
      tags:
      - Modell Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                format: int64
                type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModellFks'
  /modellFks/byIds/{ids}:
    delete:
      tags:
      - Modell Fks Resource Service
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: array
          items:
            format: int64
            type: integer
      responses:
        "204":
          description: No Content
    parameters:
    - name: ids
      in: path
      required: true
      schema:
        type: array
        items:
          format: int64
          type: integer
  /modellFks/byIds/{ids}/asList:
    get:
      tags:
      - Modell Fks Resource Service
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: array
          items:
            format: int64
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModellFks'
    parameters:
    - name: ids
      in: path
      required: true
      schema:
        type: array
        items:
          format: int64
          type: integer
  /modellFks/filter/content/equals/value/asList:
    post:
      tags:
      - Modell Fks Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModellFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModellFks'
  /modellFks/filter/content/in/values/asList:
    post:
      tags:
      - Modell Fks Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ModellFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModellFks'
  /modellFks/filter/{stringField}/equals/{value}/asList:
    get:
      tags:
      - Modell Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModellFks'
  /modellFks/filter/{stringField}/in/{values}/asList:
    get:
      tags:
      - Modell Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: values
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModellFks'
  /modellFks/filter/{stringField}/like/{value}/asList:
    get:
      tags:
      - Modell Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModellFks'
  /modellFks/list/asList:
    put:
      tags:
      - Modell Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ModellFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModellFks'
    post:
      tags:
      - Modell Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ModellFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModellFks'
  /modellFks/{id}:
    get:
      tags:
      - Modell Fks Resource Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModellFks'
    delete:
      tags:
      - Modell Fks Resource Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: No Content
    parameters:
    - name: id
      in: path
      required: true
      schema:
        format: int64
        type: integer
  /subModellAFks:
    put:
      tags:
      - Sub Modell A Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubModellAFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubModellAFks'
    post:
      tags:
      - Sub Modell A Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubModellAFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubModellAFks'
  /subModellAFks/all/asList:
    get:
      tags:
      - Sub Modell A Fks Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellAFks/autocomplete/{stringField}/like/{value}/asSortedSet:
    get:
      tags:
      - Sub Modell A Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: cut
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /subModellAFks/autocompleteIds/{stringField}/like/{value}/asList:
    get:
      tags:
      - Sub Modell A Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: cut
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      format: int64
                      type: integer
                    value:
                      type: string
                    count:
                      format: int64
                      type: integer
  /subModellAFks/byId:
    post:
      tags:
      - Sub Modell A Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              format: int64
              type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubModellAFks'
  /subModellAFks/byIds:
    delete:
      tags:
      - Sub Modell A Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                format: int64
                type: integer
      responses:
        "204":
          description: No Content
  /subModellAFks/byIds/asList:
    post:
      tags:
      - Sub Modell A Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                format: int64
                type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellAFks/byIds/{ids}:
    delete:
      tags:
      - Sub Modell A Fks Resource Service
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: array
          items:
            format: int64
            type: integer
      responses:
        "204":
          description: No Content
    parameters:
    - name: ids
      in: path
      required: true
      schema:
        type: array
        items:
          format: int64
          type: integer
  /subModellAFks/byIds/{ids}/asList:
    get:
      tags:
      - Sub Modell A Fks Resource Service
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: array
          items:
            format: int64
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
    parameters:
    - name: ids
      in: path
      required: true
      schema:
        type: array
        items:
          format: int64
          type: integer
  /subModellAFks/filter/content/equals/value/asList:
    post:
      tags:
      - Sub Modell A Fks Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubModellAFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellAFks/filter/content/in/values/asList:
    post:
      tags:
      - Sub Modell A Fks Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SubModellAFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellAFks/filter/{stringField}/equals/{value}/asList:
    get:
      tags:
      - Sub Modell A Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellAFks/filter/{stringField}/in/{values}/asList:
    get:
      tags:
      - Sub Modell A Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: values
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellAFks/filter/{stringField}/like/{value}/asList:
    get:
      tags:
      - Sub Modell A Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellAFks/list/asList:
    put:
      tags:
      - Sub Modell A Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SubModellAFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
    post:
      tags:
      - Sub Modell A Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SubModellAFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellAFks/{id}:
    get:
      tags:
      - Sub Modell A Fks Resource Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubModellAFks'
    delete:
      tags:
      - Sub Modell A Fks Resource Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: No Content
    parameters:
    - name: id
      in: path
      required: true
      schema:
        format: int64
        type: integer
  /subModellBFks:
    put:
      tags:
      - Sub Modell B Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubModellAFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubModellAFks'
    post:
      tags:
      - Sub Modell B Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubModellAFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubModellAFks'
  /subModellBFks/all/asList:
    get:
      tags:
      - Sub Modell B Fks Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellBFks/autocomplete/{stringField}/like/{value}/asSortedSet:
    get:
      tags:
      - Sub Modell B Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: cut
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /subModellBFks/autocompleteIds/{stringField}/like/{value}/asList:
    get:
      tags:
      - Sub Modell B Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: cut
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      format: int64
                      type: integer
                    value:
                      type: string
                    count:
                      format: int64
                      type: integer
  /subModellBFks/byId:
    post:
      tags:
      - Sub Modell B Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              format: int64
              type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubModellAFks'
  /subModellBFks/byIds:
    delete:
      tags:
      - Sub Modell B Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                format: int64
                type: integer
      responses:
        "204":
          description: No Content
  /subModellBFks/byIds/asList:
    post:
      tags:
      - Sub Modell B Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                format: int64
                type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellBFks/byIds/{ids}:
    delete:
      tags:
      - Sub Modell B Fks Resource Service
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: array
          items:
            format: int64
            type: integer
      responses:
        "204":
          description: No Content
    parameters:
    - name: ids
      in: path
      required: true
      schema:
        type: array
        items:
          format: int64
          type: integer
  /subModellBFks/byIds/{ids}/asList:
    get:
      tags:
      - Sub Modell B Fks Resource Service
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          type: array
          items:
            format: int64
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
    parameters:
    - name: ids
      in: path
      required: true
      schema:
        type: array
        items:
          format: int64
          type: integer
  /subModellBFks/filter/content/equals/value/asList:
    post:
      tags:
      - Sub Modell B Fks Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubModellAFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellBFks/filter/content/in/values/asList:
    post:
      tags:
      - Sub Modell B Fks Resource Service
      parameters:
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SubModellAFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellBFks/filter/{stringField}/equals/{value}/asList:
    get:
      tags:
      - Sub Modell B Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellBFks/filter/{stringField}/in/{values}/asList:
    get:
      tags:
      - Sub Modell B Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: values
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellBFks/filter/{stringField}/like/{value}/asList:
    get:
      tags:
      - Sub Modell B Fks Resource Service
      parameters:
      - name: stringField
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: firstResult
        in: query
        schema:
          format: int32
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellBFks/list/asList:
    put:
      tags:
      - Sub Modell B Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SubModellAFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
    post:
      tags:
      - Sub Modell B Fks Resource Service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SubModellAFks'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubModellAFks'
  /subModellBFks/{id}:
    get:
      tags:
      - Sub Modell B Fks Resource Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubModellAFks'
    delete:
      tags:
      - Sub Modell B Fks Resource Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: No Content
    parameters:
    - name: id
      in: path
      required: true
      schema:
        format: int64
        type: integer
components:
  schemas:
    CollectionEntity:
      type: object
      properties:
        id:
          format: int64
          type: integer
        subName:
          type: string
        subStreet:
          type: string
        subNumber:
          format: int32
          type: integer
        subAge:
          format: int64
          type: integer
    EmbeddedIdModell:
      type: object
      properties:
        stringVal:
          type: string
        stringValNotNull:
          type: string
        booleanVal:
          type: boolean
        isBoolean:
          type: boolean
        booVal:
          type: boolean
        isBool:
          type: boolean
        integerVal:
          format: int32
          type: integer
        intVal:
          format: int32
          type: integer
        longVal:
          format: int64
          type: integer
        longpVal:
          format: int64
          type: integer
        bigIntegerVal:
          type: integer
        keyA:
          type: string
        keyB:
          type: string
        keyC:
          type: string
        bool:
          type: boolean
        id:
          $ref: '#/components/schemas/EmbeddedKeys'
        embeddedIdSubModells1:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedIdSubModell1'
        embeddedIdSubModells2:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedIdSubModell2'
        embeddedIdSubModell3:
          $ref: '#/components/schemas/EmbeddedIdSubModell3'
    EmbeddedIdSubModell1:
      type: object
      properties:
        stringVal:
          type: string
        stringValNotNull:
          type: string
        booleanVal:
          type: boolean
        isBoolean:
          type: boolean
        booVal:
          type: boolean
        isBool:
          type: boolean
        integerVal:
          format: int32
          type: integer
        intVal:
          format: int32
          type: integer
        longVal:
          format: int64
          type: integer
        longpVal:
          format: int64
          type: integer
        bigIntegerVal:
          type: integer
        keyA:
          type: string
        keyB:
          type: string
        keyC:
          type: string
        bool:
          type: boolean
        id:
          format: int64
          type: integer
        key1:
          type: string
        key2:
          type: string
        key3:
          type: string
    EmbeddedIdSubModell2:
      type: object
      properties:
        stringVal:
          type: string
        stringValNotNull:
          type: string
        booleanVal:
          type: boolean
        isBoolean:
          type: boolean
        booVal:
          type: boolean
        isBool:
          type: boolean
        integerVal:
          format: int32
          type: integer
        intVal:
          format: int32
          type: integer
        longVal:
          format: int64
          type: integer
        longpVal:
          format: int64
          type: integer
        bigIntegerVal:
          type: integer
        keyA:
          type: string
        keyB:
          type: string
        keyC:
          type: string
        bool:
          type: boolean
        id:
          $ref: '#/components/schemas/EmbeddedKeys2'
    EmbeddedIdSubModell3:
      type: object
      properties:
        stringVal:
          type: string
        stringValNotNull:
          type: string
        booleanVal:
          type: boolean
        isBoolean:
          type: boolean
        booVal:
          type: boolean
        isBool:
          type: boolean
        integerVal:
          format: int32
          type: integer
        intVal:
          format: int32
          type: integer
        longVal:
          format: int64
          type: integer
        longpVal:
          format: int64
          type: integer
        bigIntegerVal:
          type: integer
        keyA:
          type: string
        keyB:
          type: string
        keyC:
          type: string
        bool:
          type: boolean
        id:
          $ref: '#/components/schemas/EmbeddedKeys'
    EmbeddedKeys:
      type: object
      properties:
        key1:
          type: string
        key2:
          type: string
        key3:
          type: string
    EmbeddedKeys2:
      type: object
      properties:
        key1:
          type: string
        key2:
          type: string
        key3:
          type: string
        key4:
          type: string
    MapEntity:
      type: object
      properties:
        id:
          format: int64
          type: integer
        subName:
          type: string
        subStreet:
          type: string
        subNumber:
          format: int32
          type: integer
        subAge:
          format: int64
          type: integer
    Modell:
      type: object
      properties:
        stringVal:
          type: string
        stringValNotNull:
          type: string
        booleanVal:
          type: boolean
        isBoolean:
          type: boolean
        booVal:
          type: boolean
        isBool:
          type: boolean
        integerVal:
          format: int32
          type: integer
        intVal:
          format: int32
          type: integer
        longVal:
          format: int64
          type: integer
        longpVal:
          format: int64
          type: integer
        bigIntegerVal:
          type: integer
        keyA:
          type: string
        keyB:
          type: string
        keyC:
          type: string
        bool:
          type: boolean
        id:
          format: int64
          type: integer
        subModell:
          $ref: '#/components/schemas/SubModell'
        collectionValues:
          type: array
          items:
            format: int32
            type: integer
        mapValues:
          type: object
          additionalProperties:
            type: string
        valueEntity:
          $ref: '#/components/schemas/ValueEntity'
        collectionEntities:
          type: array
          items:
            $ref: '#/components/schemas/CollectionEntity'
        mapEntities:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MapEntity'
    ModellFks:
      type: object
      properties:
        id:
          format: int64
          type: integer
        keyA:
          type: string
        keyB:
          type: string
        keyC:
          type: string
        name:
          type: string
        street:
          type: string
        number:
          format: int32
          type: integer
        age:
          format: int64
          type: integer
        subModellAFks:
          type: array
          items:
            $ref: '#/components/schemas/SubModellAFks'
        subModellBFks:
          type: array
          items:
            $ref: '#/components/schemas/SubModellBFks'
    SubModell:
      type: object
      properties:
        stringVal:
          type: string
        stringValNotNull:
          type: string
        booleanVal:
          type: boolean
        isBoolean:
          type: boolean
        booVal:
          type: boolean
        isBool:
          type: boolean
        integerVal:
          format: int32
          type: integer
        intVal:
          format: int32
          type: integer
        longVal:
          format: int64
          type: integer
        longpVal:
          format: int64
          type: integer
        bigIntegerVal:
          type: integer
        keyA:
          type: string
        keyB:
          type: string
        keyC:
          type: string
        bool:
          type: boolean
        id:
          format: int64
          type: integer
    SubModellAFks:
      type: object
      properties:
        id:
          format: int64
          type: integer
        index:
          format: int32
          type: integer
        keyA:
          type: string
        keyB:
          type: string
        keyC:
          type: string
        subName:
          type: string
        subStreet:
          type: string
        subNumber:
          format: int32
          type: integer
        age:
          format: int64
          type: integer
    SubModellBFks:
      type: object
      properties:
        id:
          format: int64
          type: integer
        index:
          format: int32
          type: integer
        keyA:
          type: string
        keyB:
          type: string
        keyC:
          type: string
        subName:
          type: string
        subStreet:
          type: string
        subNumber:
          format: int32
          type: integer
        age:
          format: int64
          type: integer
    ValueEntity:
      type: object
      properties:
        id:
          format: int64
          type: integer
        subName:
          type: string
        subStreet:
          type: string
        subNumber:
          format: int32
          type: integer
        subAge:
          format: int64
          type: integer
